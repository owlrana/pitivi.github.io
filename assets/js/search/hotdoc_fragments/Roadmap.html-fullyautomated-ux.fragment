fragment_downloaded_cb({"url": "Roadmap.html#fullyautomated-ux", "fragment": "Fully automated UX \nOtherwise the default behavior would be to transparently and intelligently create proxies for everything in the background. When a proxy file does not exist for an asset clip create it and use it as soon as it has been created. \nPerformance requirements in the automated scenario are even more important than in the semi automated scenario while users can expect some delay as long as there is a visual progress indication when they manually trigger an action they must absolutely not feel delays sluggishness when such actions are triggered automatically. The generation of proxy clips in the background should not negatively impact system performance. \nJakub has a different opinion than Jeff s or Bassam s suggesting that we make proxy generation a modal blocking in terms of UI operation \nYou mention the problem of indicating the transcoding process as if you could continue working with original assets and have that not stop you from editing work with original media. In case of offline editing either having assets on external drive or networked cloud storage the indication can be summed up to tell me when my assets are safe to disconnect and I m able to proceed editing offline For low performing systems the background transcoding is just an illusion you cannot really edit until your assets are transcoded. So I think both cases are best addressed by providing an aggregate progressbar telling me when all assets referenced from the project are transcoded rather than colorcoding individual clips or worrying about preview overlays. For offline editing I would agree not choking the system competely with transcoding might be a good thing but for the low performing system case you want the transcoding process to take the foreground so that the assets are ready sooner. You really can t do any k editing on a laptop and expect to also transcode proxies in the background. \n"});