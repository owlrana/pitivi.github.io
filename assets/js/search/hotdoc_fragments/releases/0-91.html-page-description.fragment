fragment_downloaded_cb({"url":"releases/0-91.html#page-description","fragment":"This is the first alpha release for the new version of Pitivi based on\nGES, the GStreamer Editing Services library.\nIt is a major rework of the entire Pitivi\narchitecture. It includes:\nTo give you a visual idea of what this meant:\nhttp://jeff.ecchi.ca/blog/wp-content/uploads/2012-02-28-12.42.44-levelled.jpg\nWARNING: Please keep in mind\nthat this is an alpha release, so there may be some bugs we haven't\nfound yet. We appreciate your feedback, so try it out, let us know how\nwell it works for you and report detailed bugs for issues you may\nencounter. Again, this is not yet considered\nproduction-ready software. We can't be sure until we test and\niron out the bugs! With your help, we will follow up with a beta release\nand eventually a 1.0 release.\nThese features have been documented throughout many blog posts from\nJanuary 2012 to September 2013. Take a look at the “Pitivi” category of\nJeff's blog for additional\ndetails and historical context.\n\nThis is just the beginning, of course. See the “Bugs fixed (and even\nmore features)” section further below if you're hungry for more.\nDependencies/requirements have changed significantly since the 0.15\nseries.\nGenerally speaking, you can refer to Pitivi's check.py for the\ndependencies' versions specific to a given release. For 0.91, those are:\nHard requirements:\nSoft requirements:\nSee also dependencies for additional tips.\nSee the list of currently known\nissues,\nthe 0.91-specific\nissues\nand the list of bugs that need re-testing with\n0.91\n(you can help!)\nIt is difficult to evaluate the amount of commits directly related to\nPitivi in GStreamer. However:\nIn GStreamer Editing Services, the Pitivi team has made 975 commits in\npreparation for this release.\nIn Pitivi:\nSince you're reading the release notes of an an alpha release, we\nsuspect you might be pretty geeky, so here are roughly 150 (of the 1300+\ncommits) that are “interesting” but were not necessarily big enough to\nbe mentioned in the “top features” above.\nWhat, you want more?! Well, you can use this command in our code\nrepository:\ngit log RELEASE-0_15_0..RELEASE-0_91_0\nIn Pitivi:\nIn GES:\nTranslations:\nA tarball is available on\nhttp://ftp.gnome.org/pub/GNOME/sources/pitivi/0.91/\nSee the Pitivi website and building with\nGES for download and installation\ninstructions.\nFeedback is welcome. See bug reporting for\ntips and tricks.\n\nReplacing the core of Pitivi by GES; 20 thousand lines of code\nremoved\nPorting to GStreamer 1.x\nPorting to GTK+ 3.x\nReplacing GooCanvas by Clutter for the timeline\nAn automated UI test suite, with many checks for mission-critical\nparts\nFixing hundreds of bugs and implementing many new features\nUI polish all over the place\nRefactoring pretty much the entire codebase\n\n\nThe redesigned clip previewing feature gives you more space to view\na video from the media library, yet stays out of your way. It now\nopens a separate window that tries to show the clip at 1:1 size\nwhenever possible. This window can be dismissed by clicking the\nclose button or clicking anywhere outside the window, so there is no\nreduction of efficiency compared to the old approach.\nUse Nautilus/Totem’s thumbnails and conform to the new version of\nthe Freedesktop specification for thumbnail directories. The result\nis prettier and we don’t have to do processing in most cases, which\nmeans even faster import/loading times.\nAsynchroneous (non-blocking) and much faster clip importing\nThe media library keeps itself sorted alphabetically as you import\nfiles, without any additional performance hit.\nPrevent playing back clip previews in double (that was a subtle one,\nas windows were exactly on top of each other)\nMake special characters show up correctly in the media library’s\niconview mode, remove the ancient filename shortening code and rely\non Pango instead.\nAvoid excessive work when searching clips in the media library,\nimproving performance\nHandle special characters in the media library’s search entry\nUse the system’s default image viewer to preview images\n\n\nSmooth, modern Clutter-based timeline with animations to enhance\nusability\nSmooth autoscrolling while playing\n\nLive preview of what you are\ntrimming.\nNo more trial and error, no more fuzzying around and moving the\nplayhead all the time to figure out if you cut your scene right.\nPlayback performance back to the 0.13.1 levels (or possibly better).\nWant to play a 1080p clip? A 2K clip? Not a problem anymore (unless\nyou're still running on a 286 or something).\nMuch faster and prettier video thumbnails on the timeline, with\ntwo-stage caching and adaptive CPU usage throttling\nMuch faster and more accurate audio waveforms, with on-disk caching\nManual layers management interface, layer reordering\nThe timeline toolbar is now vertical and sports improved “Split”,\n“Group” and “Ungroup” icons. It also does away with obsolete\nbuttons.\nAutomatic rippling (a.k.a. “magnetic”, elastic, fantastic) timeline\nmode: this makes your clips behave like magnets and prevents needing\nto re-arrange them manually all the time.\nAutomatically adjust the zoom when inserting to the end of the\ntimeline\nNew icons for split, group/ungroup and align\nClip snapping indicator\n\n\nInfinitely cleaner and easier to navigate codebase. See this blog\npost\nand this blog\npost\nfor an explanation and some numbers, or just look at this\nscreenshot\ncomparing the old and new amount of source files.\nAn awesome test suite\n\nA revised and simplified API has been implemented in GES and\nintegrated in Pitivi.\nA small brand\nadjustment.\nFrom now on, PiTiVi should simply be called “Pitivi”.\nDependencies are defined and checked in only one, centralized place:\ncheck.py\nWe now use yelp-tools instead of gnome-doc-utils\nNew format for which a mimetype needs to be registered: xges\nCommandline rendering, scripting and batch processing is now GES'\njob\nNew high-resolution logo icon\nVarious pieces of documentation (README, HACKING, AUTHORS, etc.)\nwere updated\nWe ship an AppData file in order to show up with the correct\ndescription in GNOME Software\nWe dropped the ChangeLog file, it weighs a ton and we have this\nthing called version control systems now.\n\n\nIn addition to the good old “crossfade”, you can now choose from 70\nindustry-standard\n(SMPTE)\ntransitions. This number doubles to 140 if you consider that each\ntransition can also be reversed.\nPitivi now inhibits the screensaver when playing and inhibits\nsuspend when rendering.\nThe automated backup feature now works. See this blog\npost\nand its\nsequel\n\nSimplified menus\nFix many, many, many problems with the Media Library, project\nmanagement, keyboard shortcuts, etc.\nAbility to save/export the current frame as an image file\nMuch faster application startup\nAuto-hiding toolbar in fullscreen mode\nImproved error dialogs\nAutomatically saving and restoring the state of our dynamic\ndetachable tabs/components.\nRedesigned rendering progress dialog and post-render user\nexperience. See\nthis,\nthis\nand this.\nEnforce unicode in preset names, preventing a bug with non-ASCII\nchars are used in the name of a preset\nAllow presets with “/” in their name\nFix a race between clicks on the preview widget’s slider and\nposition updates. When using it in the media library/file chooser,\nthe slider would often “jump” back to its previous position instead\nof seeking. The new behavior is now smooth and reliable.\nWhen the viewer is undocked, provide a button to toggle fullscreen\nmode\nSpecify the duration of missing/moved files when prompting the user\nabout their new location\nUpdate effect categories, merge “Noise” and “Blur”, add a\n“Compositing” category, categorize new effects\nAutomatically save the last used render directory\nStop rendering when the user presses Escape\nUse symbolic icons everywhere where it makes sense (in the media\nlibrary toolbar, property reset buttons, lists, etc.)\nUpdate the preview widget slider on a more frequent basis, giving it\na snappier feeling\nAutomatically save and restore the main window’s position. This is\nespecially useful when using detached utility windows.\nHide the effects toolbar when nothing is selected\nAdd a contextual help button in the render dialog to explain\ncontainer formats\nAllow entering a frame number into the time widget\nKeyframable (animatable) properties for all effects\nScale down effects thumbnails to fit better in the new listview\narrangement\nVarious improvements to the robustness of the import dialog's video\npreviewer\nAbility to pause and resume rendering\nA basic title editor\nFilter the project loading or media file importing dialogs to only\nshow relevant/supported files by default\nOnly show codecs and containers with a high-enough GStreamer “rank”\nto reduce the possibility of rendering problems\n\n\ncairo >= 1.10.0\nclutter >= 1.12.0\ngnonlin >= 1.1.90\ngobject-introspection >= 1.34.0\ngst-python >= 1.1.90\ngstreamer >= 1.2.0\ngstreamer-editing-services >= 1.1.90\ngtk >= 3.8.0\nnumpy (static bindings)\npygobject >= 3.4.0\npyxdg (static bindings)\n\n\ngstreamer-libav\nlibnotify\npycanberra (static bindings)\nfrei0r\n\n\nLayer management interface is missing features.\nThe title editor UI is very primitive and probably buggy. Please\njoin us to make it work up to your expectations! See the existing\ntitle editor\nbugs.\nThe transformation box has been disabled (we need someone to fix\nit).\nThe user manual is completely outdated (it references the\n0.15 series). We are looking for someone to take\non the role of writing the Pitivi user guide. Please get in touch if\nyou love writing and are interested in helping out.\nTranslations are not all fully up to date.\nThe Media Library does not generate missing thumbnails. See\nGStreamer bug\n667203 for\ndetails.\nThe ruler has not been ported to\nClutter, so it\nwill not be in sync with the rest of the timeline while\nautoscrolling.\nThe automated codecs installer is (still) broken. See bug\n686182 and GES\nbug 686181.\nThe automatic clip aligner feature does not work. We need someone to\nport it to use our new audio waveforms processing\nmodule.\nIf xptv file support is important to you, we urgently need someone\nto get involved in fixing/refactoring the xptv formatter module in\nGES. If no interest is shown after a few releases, support for this\nlegacy file format may be dropped.\n\nNo dialog to install missing codecs after discovering\nclips, and no\nerror gets raised in that case. This means that the clip will\n“appear” to have imported correctly, but if you try inserting it\ninto the timeline you may get errors in the background or Pitivi's\nUI may hang.\n\n\nAt least 50 bugs in GStreamer have been fixed by Mathieu Duponchelle\nbetween January and September 2013:\nAt least 96\nbugs\nin GStreamer since 0.15 mention Pitivi\n\n\n\nHundreds of bug\nreports\nwere resolved\nThere were 1348 commits between 0.15.2 and 0.91.\n\n"});