fragment_downloaded_cb({"url":"Mac_OS_X.html#page-description","fragment":"Mac OS X is a funny kind of Unix, but it's a Unix and should be able to\nrun Pitivi easily. It's also popular -- even lots of open source types\nlug around a MacBook of some kind. Think of applications as a free\nsoftware gateway drug! ;)\nWe're working on a system to build Pitivi for Mac using GStreamer's\nCerbero build system. At the moment it's alpha quality. See the list of\nmacOS\nissues\nfor details.\nBesides fixing bugs, we need to also prepare a DMG to distribute Pitivi\neasily to Mac users.\nAny help is welcome! If you are interested to help please get in\ntouch!\nClone our Cerbero repository which includes recipes/pitivi.recipe:\nAs described in the\nREADME\nCerbero needs XCode and Python 3.5 or\nlater to be able to bootstrap.\nStart the build. This takes ~1h30m on my laptop:\nTo start Pitivi, run in a terminal:\nMac OS X has a few major differences from Linux:\nHave a look at HACKING for some inspiration. Feel free\nto add some suggestions here if you find a useful workflow.\n\nGTK+ uses Quartz backend instead of X11\nWhen building for multi-arch, a single filesystem hierarchy with\n“fat binaries” is used, rather than separate directories for\nlibs/executables in each arch.\n\nThis causes some issues with gobject-introspection, in that\nattempting to support multi-arch (“Universal”) builds requires\nadjusting paths to the gir files. Currently this has been\nremoved from cerbero's build scripts, so you'll only get a\n64-bit build. But this might change again.\n\n\nApplications are usually “bundled” into relocatable 'Foo.app'\ndirectories which encapsulate their binaries, libraries, and shared\ndata.\n\n\nThis causes some issues with gobject-introspection, in that\nattempting to support multi-arch (“Universal”) builds requires\nadjusting paths to the gir files. Currently this has been\nremoved from cerbero's build scripts, so you'll only get a\n64-bit build. But this might change again.\n\n"});