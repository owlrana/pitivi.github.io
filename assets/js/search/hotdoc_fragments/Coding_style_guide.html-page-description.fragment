fragment_downloaded_cb({"url":"Coding_style_guide.html#page-description","fragment":"The code must be easy to understand, so it should look consistent.\nWhen entering the development environment, a git pre-commit\nhook is set\nup on your local repo. When you create a commit, the\nhook\nruns the pre-commit tool which:\nperforms some lightweight\nchecks\nruns flake8 to check the code style\nruns\npylint in\nthe sandbox to check for all kinds of errors.\nWe rely on the Python Style Guide PEP-8\nWhen deciding whether or not you should split your line when it exceeds\n79 characters, ask yourself: \"Does it truly improve legibility?\"\nWhat this translates to is:\nAvoid having very long lines.\nWhen the contents only slightly exceeds the 80 chars limit,\nconsider keeping it on one line. Otherwise it just hurts legibility and\ngives a weird \"shape\" to the code.\nThe function names, method names and other class attributes should be\nsmall_caps_with_underscore. For example:\nTo illustrate how private a method or other class field is, prepend\none or two underscores:\nUnused arguments in methods should be prefixed with unused_.\nThe most common place where this would happen is in callbacks from\ngobject signals. For example, below we don't use the second argument,\nbut we do use pad.\nThe name of a callback method should:\nWe follow the Google Python Style Guide\nfor docstrings.\n\n\nperforms some lightweight\nchecks\n\n\nruns flake8 to check the code style\n\n\nruns\npylint in\nthe sandbox to check for all kinds of errors.\n\n\n\n\nAvoid having very long lines.\n\n\nWhen the contents only slightly exceeds the 80 chars limit,\nconsider keeping it on one line. Otherwise it just hurts legibility and\ngives a weird \"shape\" to the code.\n\n\n\nbe prepended with two underscores since it's private\nbe appended with cb\n\n\n"});