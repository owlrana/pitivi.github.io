fragment_downloaded_cb({"url": "Bug_reporting.html#page-description", "fragment": "Providing debugging information \nSharing sample files projects and scenarios \nWhen running from the packages of your Linux distro \nIn some cases we might ask you to share sample media files with us to debug a particular issue. If you don t have your own hosting space we have a FTP account with unlimited space available for this purpose provided by idmark.ca. \nYou can also share in a similar way a project archive containing the project and all the media is uses \nIn addition to the project archive it is extremely helpful to provide scenario files. These are automatically generated each time you use a project and contain the operations you made. Combined with the project archive these allow us to perform exactly the actions that have occurred to trigger the bug. This makes reproducing the issue on our machines a very easy and reliable process which saves you a ton of time Here s how to provide scenario files to facilitate the process \nSee GNOME s Getting Traces instructions for some comprehensive documentation and tips on the subject. \nFor those of you who already know how to install the relevant debug packages etc we provide you with some simple reminders below of commands that can be particularly useful in Pitivi s context. \nWhen you want to attach to an existing Python process useful for deadlocks where the application will be hung instead of crashed \nWhen you want to run Pitivi entirely in gdb from the start \nWhen Pitivi crashes run bt full to get the backtrace. When Pitivi freezes press Ctrl Z and run thread apply all bt to get the backtraces for all the threads. \n"});