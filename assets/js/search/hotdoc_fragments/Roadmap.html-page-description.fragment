fragment_downloaded_cb({"url": "Roadmap.html#page-description", "fragment": "This is intended to be a general overview of the very important or big features improvements we are working on or planning. For a list of smaller features see fun tasks for newcomers. \nWhat keeps us busy in general \nAny time estimates here are mostly wild guesses. Do not treat them as hard deadlines. This aims mostly at giving an idea of how milestones follow each other. \nSee Current events for past items. \nSee T2455 to learn about proxy editing and why we want this in GES and Pitivi. This page is meant to brainstorm \nPrior art if you don t know what proxy editing feels like \nAs T2455 indicates we can envision two types of user experience a semi automatic and a fully automated one. Since Pitivi is not the only application now and in the future using GES we need to design the GES API to be flexible enough to accomodate the design needs of both kinds of applications. \nIn both cases the experience must be \nSince the Media Library s iconview is meant to be compact and minimalistic and has a fair amount of technical limitations we could use the following icon metaphor system to indicate the states of proxies for assets \nStatus icon Icon s opacity Thumbnail s opacity Meaning \nNone N A Proxies are disabled for this asset Gears sync A proxy is currently being generated for this asset Checkmark Proxies are present and ready for this asset warning The proxy could not be generated for this asset or X A proxy file is present but the original file is absent \nIn this mode users would manually select which assets clips use proxies and when the proxies are generated. There would be no automated background processing. This is probably not what we want in Pitivi in terms of the default user experience however the GES API should support that scenario. We could still provide this feature in pitivi by \nHowever this also means temporarily providing a Cancel button while those clips proxies are being generated. Additionally to the status lights icons mentioned earlier we could perhaps show a progressbar with a Stop button on its right below the media library similar to when we re importing clips \nJakub commented \nSemi automatic I don t grok this experience. Why would I want to explicitly hold the burden of being a transcoding manager I like the validity checking and ability to explicitly re render a proxy though. Ran into issues in both kdenlive and FCPX where I spent ages looking for a faulty proxy. \nTo balance things Bassam commented \nmanual vs. automatic however the ui is chosen this should be a per project setting not a choice of a different application. both workflows are valid and the same person might opt for one or another depending on the specifics of the project. \nOtherwise the default behavior would be to transparently and intelligently create proxies for everything in the background. When a proxy file does not exist for an asset clip create it and use it as soon as it has been created. \nPerformance requirements in the automated scenario are even more important than in the semi automated scenario while users can expect some delay as long as there is a visual progress indication when they manually trigger an action they must absolutely not feel delays sluggishness when such actions are triggered automatically. The generation of proxy clips in the background should not negatively impact system performance. \nJakub has a different opinion than Jeff s or Bassam s suggesting that we make proxy generation a modal blocking in terms of UI operation \nYou mention the problem of indicating the transcoding process as if you could continue working with original assets and have that not stop you from editing work with original media. In case of offline editing either having assets on external drive or networked cloud storage the indication can be summed up to tell me when my assets are safe to disconnect and I m able to proceed editing offline For low performing systems the background transcoding is just an illusion you cannot really edit until your assets are transcoded. So I think both cases are best addressed by providing an aggregate progressbar telling me when all assets referenced from the project are transcoded rather than colorcoding individual clips or worrying about preview overlays. For offline editing I would agree not choking the system competely with transcoding might be a good thing but for the low performing system case you want the transcoding process to take the foreground so that the assets are ready sooner. You really can t do any k editing on a laptop and expect to also transcode proxies in the background. \n"});