fragment_downloaded_cb({"url": "design/2008_design/2008_Architectural_Redesign/Timeline.html#page-description", "fragment": "Between containers TimelineObject and ObjectFactory \nBetween TrackObject and GStreamer \nThat come from the same ObjectFactory \nThat come from different ObjectFactory \nThe following diagram shows the relationship between \n\nWith the diagram above the use case of adding a source file to a Timeline becomes trivial \nThe Timeline creates a TimelineObject compatible with the given ObjectFactory type \nTimelines can therefore reject incompatible ObjectFactory like Live devices \nThe timeline looks for what Streams the ObjectFactory can consume provide \nFor each of the Streams that the ObjectFactory handles \nFind a Track with a compatible Stream \nThe user can of course choose his own Stream lt gt Track mapping \nCreate a TrackObject for that ObjectFactory Stream \nAdd the TrackObject to the Track \nLink the TrackObject to the newly created TimelineObject \nThe following diagram shows \nThe links between TrackObject s and GnlObject s show their relationship. \nWe have a TimelineObject X controling two TrackObject A and B coming from a common ObjectFactory O This is the most common case when adding a Audio Video File to the Timeline. \nWe want to handle the TrackObject s separately. Maybe to offset them maybe to remove one of the TrackObject \n\nThis is the case when we had two TrackObjects originally belonging to the same TimelineObject but which we unlinked. \n\nThis is for the more generic case of linking two TrackObjects. A common example is when we recorded Audio and Video on separate devices files. \n"});