fragment_downloaded_cb({"url": "design/2008_design/2008_Architectural_Redesign/Timeline.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Timeline.md\">\n<h1 id=\"overall\">Overall</h1>\n<p>The <strong>Timeline</strong> object:</p>\n<p>Those TimelineObjects can control one or many TrackObjects from one or\nmany Tracks of the Timeline.</p>\n<p>The goal of the <strong>Timeline</strong> is to offer an API suited for fast UI\ncoding. The UI can then decide whether to listen to events/modifications\ntaking place on the overall Timeline, or on the individual Tracks.</p>\n<blockquote>\n<p>This allows both creating simple and complex UI while offering the\nsame interfaces</p>\n</blockquote>\n<p>.</p>\n<p><strong>All of the following editing actions must be done on the <code>Timeline</code>,\n<code>TimelineObject</code>(s) or <code>TimelineSelection</code>s</strong> and not on the <code>Track</code>(s)\nor <code>TrackObject(s)</code>:</p>\n<ul>\n<li>Adding objects to the Timeline</li>\n<li>Removing objects from the Timeline</li>\n<li>Linking and Unlinking objects</li>\n<li>Grouping and Ungrouping objects</li>\n<li>Moving objects</li>\n<li>Changing objects priority</li>\n<li>Trimming, Sliding, Rolling, and all other actions modifying any of\n<code>start duration in-point out-point priority</code>.</li>\n</ul>\n<h2 id=\"contents\">Contents</h2>\n<ul>\n<li>One or many <strong>Track</strong>s corresponding to the <strong>Project Settings</strong>.\nThere is one <strong>Track</strong> per output <strong>Stream</strong>s (Most projects will\ntherefore have 2 Tracks, one for the Audio stream and one for the\nVideo stream).</li>\n<li>An ordered collection of <strong>TimelineObjects</strong>. Those objects can be\nSources (producing content) or Operations (modifying content).</li>\n<li>A list of <strong>Selections</strong>, grouping several existing TimelineObject.\n<ul>\n<li>This is a convenience for modifying several distinct\nTimelineObjects at the same time.</li>\n<li>A <strong>TimelineObject</strong> can belong to several <strong>TimelineSelection</strong></li>\n<li>A <strong>TimelineSelection</strong> can control one or many properties to\nkeep the modifications of those properties in sync\n(start-position, priority, in-point, out-point, ...)</li>\n</ul>\n</li>\n<li>The <strong>TimelineFactory</strong>, used in the\n<a href=\"Pipeline.html\">Pipelines</a> (for viewing,\nrendering, ...).</li>\n</ul>\n<h2 id=\"timeline-properties\">Timeline properties</h2>\n<p><code>tracks</code> : Ordered list of <code>Tracks</code> controlled by the <code>Timeline</code><br>\n<code>selections</code> : List of <code>TimelineSelection</code> in use.<br>\n<code>objects</code> : Ordered list of <code>TimelineObject</code> controlled by the <code>Timeline</code>. First ordered by <code>start</code> property, and then by <code>priority</code>.<br>\n<code>factory</code> : The <code>TimelineFactory</code> to use in <code>Pipeline</code>s.</p>\n<h2 id=\"track-properties\">Track properties</h2>\n<p><code>objects</code> : Ordered list of <code>TrackObject</code>s controlled by the Track.<br>\n<code>stream</code> : The <code>Stream</code> of the Track.</p>\n<h2 id=\"timelineobject-properties\">TimelineObject properties</h2>\n<p><a href=\"image:anatomy_of_timeline_object.png.md\">thumb</a></p>\n<p><code>factory</code> : The ObjectFactory this TimelineObject corresponds to.\n:   None is an accepted value</p>\n<p><code>start</code> : The position of the TimelineObject.<br>\n<code>duration</code> : The duration of the TimelineObject.<br>\n<code>in-point</code> : The in-point of the contents of the TimelineObject.<br>\n<code>out-point</code> : The out-point of the contents of the TimelineObject.<br>\n<code>priority</code> : The priority of the TimelineObject.<br>\n<code>min-start</code> : The earliest time to which we can set the start property of the TimelineObject with the trimStart method<br>\n<code>max-duration</code> : The maximum value we can set the duration property of the TimelienObject to</p>\n<!-- -->\n<p>; <code>track-objects</code> :: The TrackObject(s) it the TimelineObject controls.<br>\n; <code>track</code> : the track to which the object belongs<br>\n; <code>object</code> : The actual TrackObject<br>\n; <code>time-offset</code> : The offset between the TimelineObject <code>start</code> position and the TrackObject <code>start</code> position. ALWAYS POSITIVE.<br>\n; <code>priority-offset</code> : The offset between the TimelineObject <code>priority</code> and the TrackObject <code>priority</code>. ALWAYS POSITIVE.</p>\n<h2 id=\"timelineselection-properties\">TimelineSelection properties</h2>\n<p><code>objects</code> : The list of TimelineObject controlled by the <code>TimelineSelection</code></p>\n<h2 id=\"trackobject-properties\">TrackObject properties</h2>\n<p><a href=\"image:Anatomy_of_trackobject.png.md\">thumb</a></p>\n<p><code>parent</code> : The <code>TimelineObject</code> controlling this <code>TrackObject</code>. All the properties below <strong>MUST NOT BE MODIFIED DIRECTLY</strong> but through the <code>parent</code> TimelineObject.<br>\n<code>start</code> : The position of the TrackObject.<br>\n<code>duration</code> : The duration of the TrackObject.<br>\n<code>in-point</code> : The in-point of the contents of the TrackObject.<br>\n<code>out-point</code> : The out-point of the contents of the TrackObject.<br>\n<code>priority</code> : The priority of the TrackObject.</p>\n<h1 id=\"relationships\">Relationships</h1>\n<h2 id=\"between-timeline-and-tracks\">Between Timeline and Track(s)</h2>\n<p>The diagram below shows the relationship between Timeline, Tracks,\nTimelineObject and TrackObjects.</p>\n<p>Each TimelineObject controls at least one TrackObject in any of the\nTimeline's Tracks.</p>\n<blockquote>\n<p>We can see here that the two first TimelineObject control one\nTrackObject per Track. But the last TimelineObject only controls a\nTrackObject in the first Track.</p>\n</blockquote>\n<p>Each TrackObject of a given TimelineObject can have a relative offset</p>\n<blockquote>\n<p>This can be seen with the 2nd TimelineObject where the TrackObject it\ncontrols in the second track doesn't start at the same position.</p>\n</blockquote>\n<p><img src=\"Timeline-track-relationship.png\" alt=\"Relationship between Timeline and Track\" title=\"Relationship between Timeline and Track\" id=\"relationship-between-timeline-and-track\"></p>\n<h2 id=\"between-containers-timelineobject-and-objectfactory\">Between containers, TimelineObject and ObjectFactory</h2>\n<p>The following diagram shows the relationship between:</p>\n<ul>\n<li>Containers\n<ul>\n<li>Timeline</li>\n<li>Track</li>\n</ul>\n</li>\n<li>Objects\n<ul>\n<li>At the Timeline level : TimelineObject</li>\n<li>At the Track level : TrackObject</li>\n</ul>\n</li>\n<li>ObjectFactory\n<ul>\n<li>At the Timeline level : ObjectFactory</li>\n<li>At the Track level : Streams(s) of an ObjectFactory</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"Timeline-track-objectfactory-relationship.png\" alt=\"Relationship between TimelineObject, Containers and ObjectFactory\" title=\"Relationship between TimelineObject, Containers and ObjectFactory\" id=\"relationship-between-timelineobject-containers-and-objectfactory\"></p>\n<p>With the diagram above, the use-case of adding a source file to a\nTimeline becomes trivial:</p>\n<ul>\n<li>Pick the ObjectFactory corresponding to your source file</li>\n<li>Add it to the Timeline\n<ul>\n<li>\n<p>The Timeline creates a TimelineObject compatible with the given\nObjectFactory type</p>\n<blockquote>\n<p>Timelines can therefore reject incompatible ObjectFactory like\nLive devices</p>\n</blockquote>\n</li>\n<li>\n<p>The timeline looks for what Streams the ObjectFactory can\nconsume/provide</p>\n</li>\n<li>\n<p>For each of the Streams that the ObjectFactory handles:</p>\n<ul>\n<li>\n<p>Find a Track with a compatible Stream</p>\n<blockquote>\n<p>The user can of course choose his own Stream&amp;lt;=&amp;gt;Track\nmapping</p>\n</blockquote>\n</li>\n<li>\n<p>Create a TrackObject for that ObjectFactory Stream</p>\n</li>\n<li>\n<p>Add the TrackObject to the Track</p>\n</li>\n<li>\n<p>Link the TrackObject to the newly created TimelineObject</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"between-trackobject-and-gstreamer\">Between TrackObject and GStreamer</h2>\n<p>The following diagram shows:</p>\n<ul>\n<li>On the left, the class hierarchy for TrackObject</li>\n<li>On the right, the class hierarchy for the various GNonLin GStreamer\nelements.</li>\n</ul>\n<p>The links between TrackObject(s) and GnlObject(s) show their\nrelationship. <img src=\"Trackobject-gnonlin-relationship.png\" alt=\"Relationship between TrackObject(s) and the GStreamer element they control\" title=\"fig:Relationship between TrackObject(s) and the GStreamer element they control\" id=\"relationship-between-trackobjects-and-the-gstreamer-element-they-control\"></p>\n<h1 id=\"use-cases\">Use cases</h1>\n<h2 id=\"unlinking-two-trackobjects\">Unlinking two TrackObjects</h2>\n<p><img src=\"Timeline-object-unlinking.png\" alt=\"Unlinking two TrackObjects coming from the same ObjectFactory\" title=\"Unlinking two TrackObjects coming from the same ObjectFactory\" id=\"unlinking-two-trackobjects-coming-from-the-same-objectfactory\"></p>\n<p>We have a TimelineObject 'X' controling two TrackObject 'A' and 'B'\ncoming from a common ObjectFactory 'O'. This is the most common case\nwhen adding a Audio+Video File to the Timeline.</p>\n<p>We want to handle the TrackObject(s) separately. Maybe to offset them,\nmaybe to remove one of the TrackObject, ...</p>\n<ul>\n<li>We ask to unlink a certain TrackObject (B) from its controlling\nTimelineObject (X).</li>\n<li>The TimelineObject (X) looks for the ObjectFactory (O) from which\nthe TrackObject (B) was created. In this case there's only one\nObjectFactory, but there could be several in the case of\nLinkedSources.</li>\n<li>It creates a new empty TimelineObject (Y) for the selected\nObjectFactory (O). That new TimelineObject is a complete clone\nof (X) except for the list of TrackObject(s) it controls.</li>\n<li>It removes the TrackObject (B) from the list of objects it's\ntracking. This means that:\n<ul>\n<li>(B) temporarily has no controlling TimelineObject.</li>\n<li>The TrackObject (B) has NOT been removed from the Track to which\nit belonged.</li>\n</ul>\n</li>\n<li>It adds the TrackObject (B) to the list of objects controlled by the\nnew TimelineObject (Y).</li>\n</ul>\n<h2 id=\"linking-two-trackobjects\">Linking Two TrackObjects</h2>\n<h3 id=\"that-come-from-the-same-objectfactory\">That come from the same ObjectFactory</h3>\n<p><img src=\"Timeline-object-linking-simple.png\" alt=\"Linking two TrackObjects coming from the same ObjectFactory\" title=\"Linking two TrackObjects coming from the same ObjectFactory\" id=\"linking-two-trackobjects-coming-from-the-same-objectfactory\"></p>\n<p>This is the case when we had two TrackObjects originally belonging to\nthe same TimelineObject, but which we unlinked.</p>\n<ul>\n<li>We ask to link a TrackObject (B) to a TimelineObject (X).</li>\n<li>The TimelineObject (X) compares the originating ObjectFactory of the\nTrackObject (B) and sees they are the same.</li>\n<li>The TimelineObject (X) unsets the TrackObject (B) from its current\nparent TimelineObject (Y)\n<ul>\n<li>If (Y) is no longer controlling any TrackObjects, we remove it\nfrom the Timeline.</li>\n</ul>\n</li>\n<li>The TimelineObject (X) adds the TrackObject (B) to its list of\ncontrolled TrackObject.</li>\n</ul>\n<h3 id=\"that-come-from-different-objectfactory\">That come from different ObjectFactory</h3>\n<p><img src=\"Timeline-object-linking-advanced.png\" alt=\"Linking two TrackObjects coming from different ObjectFactory\" title=\"Linking two TrackObjects coming from different ObjectFactory\" id=\"linking-two-trackobjects-coming-from-different-objectfactory\"></p>\n<p>This is for the more generic case of linking two TrackObjects. A common\nexample is when we recorded Audio and Video on separate devices/files.</p>\n<ul>\n<li>We ask to link TrackkObject (B) to TrackObject (A)</li>\n<li>We see they belong to originated from completely different\nObjectFactory, requiring a new TimelineObject to control the two.</li>\n<li>Since we don't want to lose the original relationships between\nTrackObject and ObjectFactory, we create a LinkedtimelineObject\n(XY), wrapping the two previously existing TimelineObject (X and Y).\n<ul>\n<li><strong>Possibility</strong> : Since all TimelineObject have a counterpart\nObjectFactory, we could automatically create a\nLinkedObjectFactory for the LinkedTimelineObject (XY) we just\ncreated\n<ul>\n<li>This allows infinit reuse of objects created in the\nTimeline.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"remaining-issues\">Remaining issues</h1>\n<ul>\n<li>Does core need to provide some help for the UI's marker/keyframe\nhandling ?</li>\n<li>How do we 'properly' handle the different kinds of linkage in\nLinkedTimelineObject\n<ul>\n<li>Some people might just want to have synchronized 'start'\npositions, but independent priorities for the TrackObjects.</li>\n<li>Some people might want to have the priorities synchronized, but\nfreely move the positions of the TrackObjects.</li>\n</ul>\n</li>\n</ul>\n\n</div>\n\n\n        "});