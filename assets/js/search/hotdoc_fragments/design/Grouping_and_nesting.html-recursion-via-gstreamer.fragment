fragment_downloaded_cb({"url": "design/Grouping_and_nesting.html#recursion-via-gstreamer", "fragment": "Recursion via GStreamer \nAt one extreme the minimum development cost approach is one that requires exactly no code within Pitivi or GES Instead we may create a new gstreamer decoder element e.g. pitividec that takes as its input the contents of a Pitivi project file. This decoder would reuse the GES core to expose an interface equivalent to decodebin. \nOnce such an element is appropriately registered decodebin uridecodebin and playbin will be able to play Pitivi project files as if they were video clips. This means that Pitivi project files would with no additional code become playable in gstreamer based players such as Totem subject to CPU limitations of course Naturally it also means that they are importable as clips into Pitivi itself for use in higher level timelines. \nIn effect this approach is equivalent to rendering out the project to an intermediate clip that is then imported into another project except that it avoids the cost in disk space and compression loss. A sufficiently advanced implementation might also negotiate output parameters such as resolution to avoid unnecessary scaling. \n"});