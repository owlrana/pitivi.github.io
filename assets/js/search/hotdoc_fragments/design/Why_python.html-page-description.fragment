fragment_downloaded_cb({"url": "design/Why_python.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Why_python.md\">\n<h1 id=\"why-python-\">Why python ?</h1>\n<p>We like Python. It is a simple, fast and elegant programming language.\nIt allows <strong>faster</strong>, <strong>agile</strong> and <strong>robust</strong> software development.\nSome people wrongly assume that Python applications are automatically\nslow and bloated. This is untrue for many reasons:</p>\n<ul>\n<li>Python is actually surprisingly fast in many cases.</li>\n<li>Python is <strong>not the performance bottleneck</strong> here. Seriously.\n<strong>GStreamer and <a href=\"../GES.html\">GES</a> are the components doing the\nheavy work, and they are written in C</strong>. Pitivi is basically just a\npretty user interface on top of those.</li>\n<li>Most performance issues on desktop apps are not micro-optimization\nproblems, but I/O bound operations or \u201cstupid algorithms/methods\nthat do unnecessary work\u201d. Federico Mena Quintero did a great\npresentation\n(<a href=\"http://video.fosdem.org/2007/FOSDEM2007-ProfilingDesktopApplication.ogg\">video</a>,\n<a href=\"http://people.gnome.org/%7Efederico/docs/2007-02-FOSDEM/html/index.html\">slides</a>)\nalong those lines a couple of years ago.</li>\n</ul>\n<p>Most of what I highlighted above can also be found in Python's page on\n<a href=\"http://wiki.python.org/moin/PythonSpeed\">speed</a> and <a href=\"http://wiki.python.org/moin/PythonSpeed/PerformanceTips\">performance\ntips</a>.</p>\n\n</div>\n\n\n\t"});