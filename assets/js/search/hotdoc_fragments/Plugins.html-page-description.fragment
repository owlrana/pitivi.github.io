fragment_downloaded_cb({"url": "Plugins.html#page-description", "fragment": "Let s start to write plugins \nPitivi s Plugin Manager is based on libpeas. Currently we support plugins written in Python If you want to see examples of already written plugins you can put an eye on the plugins directory. \nPlugins that are supported by Pitivi can be found at PITIVI_INSTALLATION_DIR plugins In the other side plugins from third party developers should be place at the following directory HOME local share pitivi plugins Remember that if this directory does not exist it should be created. \nThe first step to create plugin is to create a plugin description file. By convention this file should be named module name.plugin. \nFor a complete example of a plugin description file see PeasPluginInfo documentation. \nThe only interface available to implement by Pitivi extensions is the Peas.Activatable. Extension modules should implement this interface and internally as soon this module is loaded Pitivi will set to it the object attribute to the Pitivi application object which will give you access to almost everything. \nNow create the file hello_world.py in the same directory of hello world.py. \nYes that s it. You ve just created your first plugin It will print a message in the terminal when you activate or deactivate the plugin. \nNow open Pitivi from a terminal so you can see the message printed by the plugin Follow these steps to activate the plugin \nYou should see that the Hello World plugin is there. \n\nIf you put an eye the terminal you will see that the message Hello World is printed \nTo deactivate the plugin follow the same steps of Activating the plugin until step \nIn Creating the Python module we mentioned that we can access to the internal objects of Pitivi. In the next tutorials you will see more complex examples but for the while you may see this example and play with it. \nWhen you activate this plugin it will load a project form some uri project.xges. But when you deactivate the plugin it will create a new blank project. Of course if some uri project.xges does not exist a dialog warning about it will appear but we want to keep the example simple. \n"});