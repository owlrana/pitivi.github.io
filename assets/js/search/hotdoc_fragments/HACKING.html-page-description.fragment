fragment_downloaded_cb({"url": "HACKING.html#page-description", "fragment": "The Pitivi development environment \nSetting up the development environment \nUpdating the development environment \nWorking on Pitivi dependencies Meson \nWorking on Pitivi dependencies Autotools Make etc \nThe official way of getting your environment up and running is by using flatpak. For this you need to install flatpak on your system along with flatpak builder which might be provided by an additional package on some distributions please tell us if it is the case for yours so we can make a list here \nCreate a development environment folder and get the Pitivi source code into it \nWhen you hack on Pitivi enter the development environment to get \nNote This can take a while when creating the sandbox from scratch. \nRun the unittests \nHack away and check the effect of you changes by simply running \nTo update the dependencies installed in the sandbox run \nThat will actually recreate the prefix update all dependencies from their git repos and tarballs as defined in the flatpak manifest located at build flatpak pitivi.template.json \nIf you have to work on say GStreamer Editing Services which is built using the Meson build system first clone it into your pitivi dev folder \nPrepare its build directory. Once it has been set up you won t have to run meson again for this build directory. \nBuild and install it in the sandbox \nIn the ptv flatpak development environment meson and ninja are aliases which run meson and ninja in the flatpak sandbox. \nNOTE When updating the environment with ptvenv update it will use your local dependencies repositories it finds in the pitivi dev folder instead of the default remote repositories. This means you have to update them yourself. Also beware that it will not take into account not committed changes. \nIf the project you are working on is built with other tools make sure they are run in the sandbox by using ptvenv. For example \n"});