fragment_downloaded_cb({"url": "Testing.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Testing.md\">\n<h1 id=\"testing\">Testing</h1>\n<p>We have tree sets of tests:</p>\n<ul>\n<li>the normal unit tests (ninja test)</li>\n<li>integration tests using GstValidate.</li>\n<li><a href=\"QA_Scenarios.html\">manual tests</a></li>\n</ul>\n<p>Since version <a href=\"releases/0-91.html\">0.91</a>, our backend test suite is much\nsmaller and simpler; since most of the core functionality is now handled\nby <a href=\"GES.html\">GES</a>, you need to run GES's test suite instead if\nyou want to test more thoroughly.</p>\n<h2 id=\"unit-tests\">Unit tests</h2>\n<p>You can run the unit tests with:</p>\n<p><code>ninja -C mesonbuild/ test</code></p>\n<p>If you want to run only one particular unit test, use:</p>\n<p><code>nose2 tests test_project.TestProjectManager.testLoadProjectFailedUnknownFormat</code></p>\n<h3 id=\"writing-unit-tests\">Writing unit tests</h3>\n<p>As mock library we use <a href=\"http://www.voidspace.org.uk/python/mock/\">Mock</a>,\nas it's now integrated into\n<a href=\"http://docs.python.org/dev/library/unittest.mock\">Python3</a> which we use\nas of <a href=\"releases/0-94.html\">0.94</a>.</p>\n<p>If you're curious about our unit tests, the best way to get to know them\nis to write a few Pitivi unit tests and have us review them. Check out\n<a href=\"https://github.com/pitivi/pitivi/blob/master/docs/HACKING.md\">how to set up your dev\nenv</a> and\ncome in our <a href=\"http://www.pitivi.org/?go=contact\">IRC channel</a>!</p>\n<h2 id=\"integration-tests\">Integration tests</h2>\n<p>The integration tests are run with GstValidate. They are located in the\n<a href=\"https://git.gnome.org/browse/pitivi/tree/tests/validate-tests\">tests/validate-tests</a>\ndirectory. Each <code>.scenario</code> file in the\n<a href=\"https://github.com/pitivi/pitivi/tree/master/tests/validate-tests/scenarios\">scenarios</a>\nsubdirectory contains a sequence of actions which represent a test.</p>\n<p>When a test is run, the actions in the scenario are performed by\nhandlers in\n<a href=\"https://github.com/pitivi/pitivi/blob/master/pitivi/utils/validate.py\">pitivi/utils/validate.py</a>,\nor by handlers in GES. The handlers generally act on the widgets and\ncheck the expected effect has been obtained on the GES objects. Besides\nthe checks integrated in the handlers, for now it is not possible to\nhave additional checks.</p>\n<p>A scenario file is <a href=\"http://wiki.pitivi.org/wiki/Bug_reporting#Sharing_sample_files.2C_projects.2C_and_.22scenarios.22\">created\nautomatically</a>\neach time Pitivi is used.</p>\n<p>You can run the integration tests with:</p>\n<p><code>tests/validate-tests/runtests</code></p>\n<p>See also:</p>\n<ul>\n<li><a href=\"Test_suite_wishlist.html\">Test suite wishlist</a></li>\n</ul>\n\n</div>\n\n\n        "});