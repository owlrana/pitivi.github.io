fragment_downloaded_cb({"url":"Testing.html#page-description","fragment":"We have three sets of tests:\nSince version 0.91, our backend test suite is much\nsmaller and simpler; since most of the core functionality is now handled\nby GES, you need to run GES's test suite instead if\nyou want to test more thoroughly.\nYou can run the unit tests with one of:\nIf you want to run only one particular unit test, use (assuming you are in\nour flatpak based development environment):\nListing tests:\nNOTE: If you are not in our dev env, replace ptvtests with\ngst-validate-launcher tests/ptv_testsuite.py.\nAs mock library we use Mock,\nas it's now integrated into\nPython3 which we use\nas of 0.94.\nIf you're curious about our unit tests, the best way to get to know them\nis to write a few Pitivi unit tests and have us review them. Check out\nhow to set up your dev env and\ncome in our IRC channel!\nThe integration tests are run with GstValidate. They are located in the\ntests/validate-tests\ndirectory. Each .scenario file in the\nscenarios\nsubdirectory contains a sequence of actions which represent a test.\nWhen a test is run, the actions in the scenario are performed by\nhandlers in\npitivi/utils/validate.py,\nor by handlers in GES. The handlers generally act on the widgets and\ncheck the expected effect has been obtained on the GES objects. Besides\nthe checks integrated in the handlers, for now it is not possible to\nhave additional checks.\nA scenario file is created\nautomatically\neach time Pitivi is used.\nYou can run the integration tests with:\n\nthe normal unit tests (ninja test)\nintegration tests using GstValidate.\nmanual tests\n\n"});