fragment_downloaded_cb({"url": "Pitivi-1.0/Plugins.html#ui-integration", "fragment": "UI integration \nExtending the user interface could be achieved in basically two ways in GTK \nThe first is writing custom code to integrate new widgets provided by the plugin into the current user interface design. \nThe second way is taking advantage of the UImanager component provided by gtk this facility allow the developer to define UI widgets as xml then the UImanager can be told to merge the xml code into the existing GUI. Even thought this approach requires the plugin writer to learn UImanager xml syntax the process clearly separate the UI creation part from the definition of actions triggered by the new UI piece so it ll be preferred to the former approach when possible. \nDespite of the type of widget integrated in the main user interface the following interface definitions will provide methods with a UI suffix meant to provide to the UImanager the xml code to integrate inside the main user interface and other methods with the suffix Action meant to provide to the main application actions to bind to the main UI widgets. \nPlugins must conform to the following protocol if they want to extend pitivi UI in change pitivi is obliged to integrate the widgets provided by plugins in the way plugins define with the freedom to choose when it s time to integrate them usually when the main user interface is built at application startup or when user choose to activate the plugin \n"});