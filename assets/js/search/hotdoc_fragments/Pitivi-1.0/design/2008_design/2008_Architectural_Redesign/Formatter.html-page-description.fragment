fragment_downloaded_cb({"url": "Pitivi-1.0/design/2008_design/2008_Architectural_Redesign/Formatter.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Formatter.md\">\n<h1 id=\"goal\">Goal</h1>\n<p>A <strong>Formatter</strong> is responsible for :</p>\n<ul>\n<li>Storing a <a href=\"New_Design_2008/Project.md\">Project</a> and all of\nits contents for later usage, <strong>and/or</strong></li>\n<li>Creating a <a href=\"New_Design_2008/Project.md\">Project</a> and all of\nits contents.</li>\n</ul>\n<p>A default <code>Formatter</code> will always be available for storing/creating\nprojects under the internal PiTiVi project file format.</p>\n<p>New <code>Formatter</code>s can be provided through plugins.</p>\n<p>A non-exhaustive list of potential <code>Formatter</code>s:</p>\n<ul>\n<li>AAF, used by FCP, Avid, ...</li>\n<li>Playlists:\n<ul>\n<li>EDL</li>\n<li>ASX</li>\n<li>...</li>\n</ul>\n</li>\n<li>Application specific formats for Cinelerra, kino, kdenlive, ...</li>\n<li>Application specific formats for FCP, Premiere Pro, Sony Vegas, ...</li>\n<li>Online storages\n<ul>\n<li>MetaVid</li>\n</ul>\n</li>\n</ul>\n<p>A <code>Formatter</code> can provide its own type of ObjectFactory provided it is a\nsubclass of a known valid ObjectFactory (SourceFactory,\nOperationFactory).</p>\n<h1 id=\"capabilities\">Capabilities</h1>\n<ul>\n<li><code>loadProject(</code><em><code>location</code></em><code>)</code> : returns a new\n<a href=\"New_Design_2008/Project.md\">Project</a> fully loaded.</li>\n<li><code>storeProject(</code><em><code>project</code></em><code>,</code><em><code>location</code></em><code>)</code> : stores the given\n<a href=\"New_Design_2008/Project.md\">Project</a> at the given location.</li>\n<li><code>canHandle(</code><em><code>location</code></em><code>)</code> : Test whether the <code>Formatter</code> can\nhandle the given location.</li>\n</ul>\n\n</div>\n\n\n\t"});