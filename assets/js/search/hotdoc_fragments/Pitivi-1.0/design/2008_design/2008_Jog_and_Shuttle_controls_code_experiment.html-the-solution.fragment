fragment_downloaded_cb({"url": "Pitivi-1.0/design/2008_design/2008_Jog_and_Shuttle_controls_code_experiment.html#the-solution", "fragment": "The Solution \nSo how can we correct x into z We need to find the reverse method of f let s call it i. This means that x f z and z i x I first thought it might be just a linear function but that was not the case. So I developed a frame correction algorithm which uses linear interpolation between known values of x f x to predict x i x or x z You can find the source code of this in the pystreamer player frameMixin Mixin.seek method. I ve tested it with a couple of videos with really bad codecs and it always seems to succeed. As pitivi will be used by all kinds of end users it is nice that they don t have to worry about codecs or transcode it first in another codec. \nThe algorithm knows after two seeks if the codec is accurate or not. If it is accurate it will show a succes icon and the correction algorithm disables itself. If it is incorrect it will calculate and show a warning sign. By clicking on the warning icon you can optionally show the incorrectness. The incorrectness is the average difference between seeked and queried positions in percent. \nOf course it makes seeking a bit more slow for inaccurate codecs but the speed remains acceptable. Moreover for video editing frame stability precision is more important than speed. I guess because gstreamer is mainly used in media players not editors speed was prioritized rather than precision. \n"});