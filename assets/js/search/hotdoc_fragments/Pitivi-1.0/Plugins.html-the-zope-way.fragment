fragment_downloaded_cb({"url": "Pitivi-1.0/Plugins.html#the-zope-way", "fragment": "The Zope way \nSince version the CMS engine Zope http www.zope.org introduced a full fledged interface implementation in python as core system for its pluggable architecture. \nIn python the concept of interfaces intended as a formal way to define relationships between items does not yet exist instead duck typing is the generally utilized way so if an object hasattr foo bar then foo.bar but this approach goes so far since it is not possible to determine if an attribute is callable or has constrains to its possible values. \nIn fact plugin developers must rely over documentation to check what methods their classes have to provide to implement a certain feature and this approach is very prone to broke plugins compatibility if documentation is not kept perfectly synchronized with the code. \nZope interfaces are designed to be applied not only to classes but also to modules objects and functions since they follow the golden rule that specification should make no assumption about implementation this approach leaves complete freedom to the plugin developer to organize its code in the way it prefers as long the intefrace requirements are fullfilled in this way duck typing gets formalized without adding a big overhead. \nfrom zope.interface import Interface implements providedBy \nclass ISing Interface def sing Returns a melody \nclass Sinatra object implements ISing \ndef sing self return In singing in the rain... \nfrank Sinatra ISing.providedBy frank True \nInterfaces fully supports inheritance from other interfaces with the security check that children s methods conforms to ancestor s one if overridden implementer of an interface hierarchy can limit the implentation only to a certain child interface in the lineage the status of interface implementer can be attached at runtime to items that do not explicitely implemented the interface in their definition as well the implementer status can be removed from an item at runtime useful for example in containers that implement an interface by delegating implementation to contained objects \nThe other big feature of Zope interfaces is that they can be used to create adapters in a very efficient way providing also a centralized registry for adapters. \n"});